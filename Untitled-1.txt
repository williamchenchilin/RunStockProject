    DATABASE_URL = os.environ.get('postgres://william:OksYLIKWCizAXTr5nPG0g0DLddNMu8ql@dpg-cmm7880l5elc73ca9p50-a/runstock')

    if DATABASE_URL is None:
        print("DATABASE_URL environment variable is not set")

    conn = None
    try:
        url = urlparse(DATABASE_URL)
        conn = psycopg2.connect(
               dbname='runstock',
               user=url.username,
               password=url.password,
               host=url.hostname,
               port=url.port
        )
            # 測試連接是否成功
        cur = conn.cursor()
        cur.execute("SELECT version()")
        version = cur.fetchone()
        print("Connected to the database. PostgreSQL version:", version)

    # 在這裡添加其他測試操作

    except psycopg2.Error as e:
        print("Unable to connect to the database:", e)

    finally:
    # 無論是否連接成功都關閉連接
        if conn is not None:
            cur.close()
            conn.close()
    conn = psycopg2.connect(DATABASE_URL)


    cur = conn.cursor()


    for stock_data in Stock_Result_List:
        cur.execute('''
            INSERT INTO Lf_Stock_Var 
                        (Category, url, stock_code, stock_name, Src_Dt)
                    VALUES 
                        (%s, %s, %s, %s ,now())
                      '''
                      , (stock_data['Category']
                       , stock_data['url']
                       , stock_data['stock_code']
                       , stock_data['stock_name']))

    # 提交更改
    conn.commit()

    # 关闭连接
    cur.close()
    conn.close()

        # 將資訊存入 PostgreSQL
        #with Session() as session:
            # 使用 SQLAlchemy 將資料寫入 PostgreSQL
            # ...
            
        #current_time = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        #print(f"定時任務執行成功，時間：{current_time}")

# OUT 回傳值
    return ('完成本次更新')